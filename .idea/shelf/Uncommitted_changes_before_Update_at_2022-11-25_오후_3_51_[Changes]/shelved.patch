Index: src/main/java/bankSystem/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package bankSystem;\r\nimport bankSystem.interFace.*;\r\n\r\nimport java.util.InputMismatchException;\r\nimport java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n\r\n        Scanner sc = new Scanner(System.in);\r\n        //인터페이스들을 생성하기위한 부분\r\n        MainInterface mainIn = new MainInterface();\r\n        CustomerInterface customerInterface = new CustomerInterface();\r\n        RePasswordInterface rePasswordInterface = new RePasswordInterface();\r\n        BankInterface bankInterface = new BankInterface();\r\n        //고객인지 관리자인지 알기위한 관리자비밀번호\r\n        String adminpassword = \"1234\";\r\n        //고객 정보 전체를를 담아둘 은행 하나 생성;\r\n        Bank bankAll = new Bank();\r\n        Customer customer = new Customer();\r\n        //고객 창으로 이동을 위해 선언\r\n\r\n        boolean isFirstWhile = false;\r\n        int adminCustomer = 0;\r\n        while(!isFirstWhile){\r\n            mainIn.run();\r\n            // 메뉴 입력받기\r\n            // InputMismatchException에 대한 예외처리 진행\r\n            // 숫자를 제외한 형식을 입력했을때\r\n            // 시스템 정지가 아닌 다시 입력하도록 함\r\n            try {\r\n                //고객인가 관리자인가 구분자 입력\r\n                adminCustomer = sc.nextInt();\r\n            } catch (InputMismatchException e) {\r\n                System.out.println(\"숫자만 입력해주시기 바랍니다.\");\r\n                sc = new Scanner(System.in);\r\n                continue;\r\n            }\r\n            switch (adminCustomer){\r\n                //관리자인가 고객인가 선택\r\n                //메인밖에 클래스로 뺄것인가 아니면 이상태로 할것인가는;;\r\n                //완성하거나 or 회의하고 바꾸는걸로\r\n                //case1로 가면 뱅크 클래스 시스템으로 case2로 가면 고객 클래스 시스템으로\r\n                //가는 형식 등\r\n                case 1:\r\n                    System.out.println(\"관리자 비밀번호를 입력해주시기 바랍니다.\");\r\n                    //비밀번호 입력\r\n                    sc = new Scanner(System.in);\r\n                    String tempass = sc.nextLine();\r\n                    //비밀번호 일치여부 확인\r\n                    if (adminpassword.equals(tempass)){\r\n                        //while문을 돌리기 위한 변수\r\n                        boolean isInOut = false;\r\n                        //관리자 메인으로 이동하거나 여기에서 while문 을 돌릴곳\r\n                        while(!isInOut){\r\n                            bankInterface.bankRun();\r\n                            sc = new Scanner(System.in);\r\n                            int adminSelect=0;\r\n                            try {\r\n                                adminSelect = sc.nextInt();\r\n                            } catch (InputMismatchException e) {\r\n                                System.out.println(\"숫자만 입력해주시기 바랍니다.\");\r\n                                continue;\r\n                            }\r\n                            switch (adminSelect){\r\n                                case 1:\r\n                                    bankAll.bankcreate();\r\n                                    break;\r\n\r\n                                case 2:\r\n                                    bankAll.changeCustomer();\r\n                                    break;\r\n\r\n                                case 3:\r\n                                    bankAll.deleteCustomer();\r\n                                    break;\r\n\r\n                                case 4:\r\n                                    bankAll.selectAccountView();\r\n                                    break;\r\n\r\n                                case 5:\r\n                                    bankAll.allAccountView();\r\n                                    break;\r\n\r\n                                default:\r\n                                    isInOut = true;\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }else{\r\n                        rePasswordInterface.rePass();\r\n                    }\r\n                    break;\r\n                case 2:\r\n                    sc = new Scanner(System.in);\r\n                    //계좌번호를 입력받을 변수\r\n                    String temAccountNumber = sc.nextLine();\r\n                    //비밀번호 입력\r\n                    String tempassword = sc.nextLine();\r\n\r\n                    //아래는 참고용(관리자꺼) 고객은 은행에 계좌번호와 비밀번호 입력시\r\n                    //새로운 계좌를 생성하게 할것인지, 은행에서 계좌생성시 같이 리스트를 생성할것인지는\r\n                    //회의 이후 결정\r\n//                    if (adminpassword.equals(tempassword)){\r\n//                        customerInterface.customerRun();\r\n//                        //고객 메인으로 이동하거나 여기에서 while문 을 돌릴곳\r\n//                    }else{\r\n//                        rePasswordInterface.rePass();\r\n//                    }\r\n\r\n                    break;\r\n\r\n                default:\r\n                    System.out.println(\"종료\");\r\n                    isFirstWhile = true;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bankSystem/Main.java b/src/main/java/bankSystem/Main.java
--- a/src/main/java/bankSystem/Main.java	(revision 573fc73a05baa10a8c62eb984d4d769385055215)
+++ b/src/main/java/bankSystem/Main.java	(date 1669359026645)
@@ -64,7 +64,7 @@
                             }
                             switch (adminSelect){
                                 case 1:
-                                    bankAll.bankcreate();
+                                    bankAll.bankCreate();
                                     break;
 
                                 case 2:
Index: src/main/java/bankSystem/Bank.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package bankSystem;\r\nimport bankSystem.interFace.BankInInterface;\r\nimport java.util.Scanner;\r\n\r\npublic class Bank {\r\n    public static BankList banklist;\r\n\r\n    public Bank(){banklist = new BankList();}\r\n\r\n    //계좌 생성 메소드\r\n    public void BankCreate(){\r\n        String  name, password, AccountNumber;\r\n//        LocalDateTime date = LocalDateTime.now();\r\n        boolean isTrueAccountNumber = false;\r\n        Scanner sc = new Scanner(System.in);\r\n\r\n        BankInInterface bankInInterface = new BankInInterface();\r\n        // 계좌 작성전 입력해야하는 정보(고객이름, 비밀번호, 계좌번호) 입력받기\r\n        System.out.println(\"------작성------\");\r\n\r\n        // 고객이름 작성\r\n        System.out.println(\"고객이름 입력 : \");\r\n        name = sc.nextLine();\r\n\r\n        // 비밀번호번호 작성\r\n        System.out.println(\"비밀번호 입력 : \");\r\n        password = sc.nextLine();\r\n        //계좌 번호\r\n        while(!isTrueAccountNumber) {\r\n            bankInInterface.inRun();\r\n            // 계좌번호 작성\r\n            sc = new Scanner(System.in);\r\n            //정규표현식 변수\r\n            String check = \"^(\\\\d{1,4})(-(\\\\d{1,5}))(-(\\\\d{1,4}))\";\r\n            //계좌번호 작성\r\n            AccountNumber = sc.nextLine();\r\n            if (AccountNumber.equals(\"0\")){\r\n                break;\r\n            }\r\n            if (AccountNumber.matches(check)){\r\n                boolean isTrue = banklist.accountGetter(AccountNumber);\r\n                if(!isTrue){\r\n                    System.out.println(\"중복입니다.\");\r\n                    System.out.println(\"다른 계좌번호를 입력해주세요\");\r\n                    continue;\r\n                }\r\n                banklist.Setter(name, password,AccountNumber);\r\n                isTrueAccountNumber = true;\r\n            }else {\r\n                System.out.println(\"계좌번호 규칙을 준수해주시기 바랍니다..\");\r\n            }\r\n        }\r\n    }\r\n\r\n    //2번 계좌 수정 소유자명\r\n    //계좌 번호와 비밀번호를 입력할건지. 이름과 비밀번호를 입력할것인지\r\n    public void changeCustomer(){\r\n        //\r\n        Scanner sc = new Scanner(System.in);\r\n        System.out.println(\"수정할 계좌의 계좌번호를 입력해주세요 : \");\r\n        String accountNumber = sc.nextLine();\r\n        System.out.println(\"수정할 계좌의 비밀번호를 입력해주세요 : \");\r\n        String password = sc.nextLine();\r\n        //존재하는지 확인 존재할시 false로 돌려주는 boolean형 리턴 메소드\r\n        boolean isChangeCheck = banklist.aBooleanchangeGetter(accountNumber, password);\r\n        if(!isChangeCheck) {\r\n            System.out.println(\"---------------------------------\");\r\n            System.out.println(\"계좌의 변경할 비밀번호를 입력해주세요 : \");\r\n            sc = new Scanner(System.in);\r\n            String changePassword = sc.nextLine();\r\n            banklist.changeSetter(accountNumber, changePassword);\r\n        }else {\r\n            System.out.println(\"존재하지 않는 계좌번호 이거나 비밀번호가 틀렸습니다.\");\r\n        }\r\n    }\r\n\r\n\r\n    //3번 계좌 삭제 소유자명\r\n    public void deleteCustomer(){\r\n        //\r\n        Scanner sc = new Scanner(System.in);\r\n        System.out.println(\"삭제할 계좌의 계좌번호를 입력해주세요 : \");\r\n        String accountNumber = sc.nextLine();\r\n        System.out.println(\"삭제할 계좌의 비밀번호를 입력해주세요 : \");\r\n        String password = sc.nextLine();\r\n        boolean delCheck =banklist.deleteCustomer(accountNumber, password);\r\n        if (!delCheck){\r\n            System.out.println(\"삭제 되었습니다\");\r\n        }else{\r\n            System.out.println(\"존재하지 않는 계좌번호 이거나 비밀번호가 틀렸습니다.\");\r\n        }\r\n    }\r\n\r\n\r\n    //4번 계좌 검색 소유자명\r\n\r\n    ////////////////////////////////////////////////////////\r\n    // 계좌 검색 계좌 번호로 인한 탐색도 추가해야한다 아직 미완성/////\r\n    // if문으로 시작시 탐색방법을 나눌건지 따로 할것인지 결정하기/////\r\n    ////////////////////////////////////////////////////////\r\n\r\n    public void selectAccountView(){\r\n        if (banklist.lengthGetter() == 0){\r\n            System.out.println(\"가지고 계신 계좌가 없습니다.\");\r\n            return;\r\n        }\r\n\r\n        System.out.println(\"찾고 싶은 계좌의 소유자명을 입력해주세요\");\r\n        Scanner sc = new Scanner(System.in);\r\n        String inName = sc.nextLine();\r\n//        //이제막 입력된것이 맨위로 보이게 하고싶을때\r\n//        for (int i =banklist.lengthGetter(); i>0; i--){\r\n//            bankSystemItem temp = banklist.Getter(inName,i-1);\r\n//            if(temp == null) continue;\r\n//            System.out.println(\"고객수 : \"+temp.getBankIdx() +\",\\t고객명 :\\t\"+temp.getCustomerName()+\",\\t비밀번호 :\\t\"+temp.getCustomerPassword()+\",\\t계좌번호 :\\t\"+temp.getCustomerAccountNumber());\r\n//        }\r\n        //입력되어있는순으로 출력하고싶을때\r\n        for (int i =0; i<banklist.lengthGetter(); i++){\r\n            BankSystemItem temp = banklist.Getter(inName, i);\r\n            if(temp == null) {\r\n                System.out.println(\"고객이 가진 계좌가 없습니다.\");\r\n                continue;\r\n            }\r\n            System.out.println(\"고객수 : \"+temp.getBankIdx() +\",\\t고객명 :\\t\"+temp.getCustomerName()+\",\\t비밀번호 :\\t\"+temp.getCustomerPassword()+\",\\t계좌번호 :\\t\"+temp.getCustomerAccountNumber()+ \",\\t잔고 :\\t\"+temp.getCustomerBalance());\r\n        }\r\n    }\r\n    //5번 전체 조회하기\r\n    public void allAccountView(){\r\n        //비어있다면 그만둔다\r\n        if(banklist.lengthGetter() == 0) return;\r\n        System.out.println(\"이용자수\\t고객명\\t비밀번호\\t계좌번호\\t잔고\");\r\n        System.out.println(\"------------------------------------\");\r\n        //이제막 입력된것이 맨위로 보이게 하고싶을때\r\n//        for (int i =banklist.lengthGetter(); i>0; i--){\r\n//            bankSystemItem temp = banklist.GetterAll(i-1);\r\n//            System.out.println(\"고객수 : \"+temp.getBankIdx() +\",\\t고객명 :\\t\"+temp.getCustomerName()+\",\\t비밀번호 :\\t\"+temp.getCustomerPassword()+\",\\t계좌번호 :\\t\"+temp.getCustomerAccountNumber());\r\n//        }\r\n        //입력되어있는순으로 출력하고싶을때\r\n        for (int i =0; i<banklist.lengthGetter(); i++){\r\n            BankSystemItem temp = banklist.GetterAll(i);\r\n            System.out.println(\"고객수 : \"+temp.getBankIdx() +\",\\t고객명 :\\t\"+temp.getCustomerName()+\",\\t비밀번호 :\\t\"+temp.getCustomerPassword()+\",\\t계좌번호 :\\t\"+temp.getCustomerAccountNumber()+ \",\\t잔고 :\\t\"+temp.getCustomerBalance());\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bankSystem/Bank.java b/src/main/java/bankSystem/Bank.java
--- a/src/main/java/bankSystem/Bank.java	(revision 573fc73a05baa10a8c62eb984d4d769385055215)
+++ b/src/main/java/bankSystem/Bank.java	(date 1669359026642)
@@ -8,7 +8,7 @@
     public Bank(){banklist = new BankList();}
 
     //계좌 생성 메소드
-    public void BankCreate(){
+    public void bankCreate(){
         String  name, password, AccountNumber;
 //        LocalDateTime date = LocalDateTime.now();
         boolean isTrueAccountNumber = false;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"365d5c1c-37cc-46b0-8eab-33b434b5d91a\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/.gitignore\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/gradle.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/build.gradle\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/gradle/wrapper/gradle-wrapper.jar\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/gradle/wrapper/gradle-wrapper.properties\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/gradlew\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/gradlew.bat\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/settings.gradle\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/bankSystem/Bank.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/bankSystem/BankList.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/bankSystem/Customer.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/bankSystem/CustomerAccount.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/bankSystem/Main.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/bankSystem/interFace/BankInInterface.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/bankSystem/interFace/BankInterface.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/bankSystem/interFace/CustomerInterface.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/bankSystem/interFace/MainInterface.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/bankSystem/interFace/RePasswordInterface.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2I1kUHsCbR6yHxMvJ7ki4z6exBz\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"nodejs_package_manager_path\": \"npm\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"$PROJECT_DIR$/src/main/java\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"365d5c1c-37cc-46b0-8eab-33b434b5d91a\" name=\"Changes\" comment=\"\" />\r\n      <created>1669356491636</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1669356491636</updated>\r\n      <workItem from=\"1669356494290\" duration=\"325000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 573fc73a05baa10a8c62eb984d4d769385055215)
+++ b/.idea/workspace.xml	(date 1669359065604)
@@ -4,28 +4,13 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="365d5c1c-37cc-46b0-8eab-33b434b5d91a" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/gradle.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/build.gradle" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/gradle/wrapper/gradle-wrapper.jar" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/gradle/wrapper/gradle-wrapper.properties" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/gradlew" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/gradlew.bat" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/settings.gradle" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/bankSystem/Bank.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/bankSystem/BankList.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/bankSystem/Customer.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/bankSystem/CustomerAccount.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/bankSystem/Main.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/bankSystem/interFace/BankInInterface.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/bankSystem/interFace/BankInterface.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/bankSystem/interFace/CustomerInterface.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/bankSystem/interFace/MainInterface.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/bankSystem/interFace/RePasswordInterface.java" afterDir="false" />
+    <list default="true" id="365d5c1c-37cc-46b0-8eab-33b434b5d91a" name="Changes" comment="커밋 테스트">
+      <change beforePath="$PROJECT_DIR$/.idea/gradle.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/gradle.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/bankSystem/Bank.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/bankSystem/Bank.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/bankSystem/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/bankSystem/Main.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -51,14 +36,38 @@
   </component>
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
     "WebServerToolWindowFactoryState": "false",
-    "nodejs_package_manager_path": "npm"
+    "last_opened_file_path": "C:/account",
+    "nodejs_package_manager_path": "npm",
+    "settings.editor.selected.configurable": "project.propVCSSupport.DirectoryMappings"
   }
 }]]></component>
   <component name="RecentsManager">
     <key name="MoveFile.RECENT_KEYS">
       <recent name="$PROJECT_DIR$/src/main/java" />
     </key>
+  </component>
+  <component name="RunManager">
+    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="bankSystem.Main" />
+      <module name="BankTeam.main" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="bankSystem.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Application.Main" />
+      </list>
+    </recent_temporary>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
@@ -70,6 +79,21 @@
       <updated>1669356491636</updated>
       <workItem from="1669356494290" duration="325000" />
     </task>
+    <task id="LOCAL-00001" summary="커밋 테스트">
+      <created>1669358427868</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1669358427868</updated>
+    </task>
+    <task id="LOCAL-00002" summary="커밋 테스트">
+      <created>1669358467450</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1669358467450</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -86,4 +110,8 @@
       </map>
     </option>
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="커밋 테스트" />
+    <option name="LAST_COMMIT_MESSAGE" value="커밋 테스트" />
+  </component>
 </project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\r\n    <mapping directory=\"$PROJECT_DIR$/bankerSystem-team-3\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision 573fc73a05baa10a8c62eb984d4d769385055215)
+++ b/.idea/vcs.xml	(date 1669359026637)
@@ -2,6 +2,5 @@
 <project version="4">
   <component name="VcsDirectoryMappings">
     <mapping directory="$PROJECT_DIR$" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/bankerSystem-team-3" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n          </set>\r\n        </option>\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 573fc73a05baa10a8c62eb984d4d769385055215)
+++ b/.idea/gradle.xml	(date 1669359026633)
@@ -1,10 +1,14 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
+        <option name="delegatedBuild" value="true" />
+        <option name="testRunner" value="GRADLE" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="gradleJvm" value="#JAVA_HOME" />
         <option name="modules">
           <set>
             <option value="$PROJECT_DIR$" />
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"FrameworkDetectionExcludesConfiguration\">\r\n    <file type=\"web\" url=\"file://$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"corretto-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 573fc73a05baa10a8c62eb984d4d769385055215)
+++ b/.idea/misc.xml	(date 1669359026635)
@@ -4,7 +4,7 @@
   <component name="FrameworkDetectionExcludesConfiguration">
     <file type="web" url="file://$PROJECT_DIR$" />
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="corretto-17" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
